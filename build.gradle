buildscript {
    repositories {
        // These repositories are only for Gradle plugins, put any other repositories in the repository block further below
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

plugins {
    id 'maven-publish'
    id 'java-library'
    id 'signing'
    id 'idea'
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'

group = group_id
version = mod_version

java {
    archivesBaseName = mod_name
    toolchain.languageVersion = JavaLanguageVersion.of(17)
    //withJavadocJar()
    withSourcesJar()
}

minecraft {
    mappings channel: 'parchment', version: '2022.11.27-1.19.2'
    accessTransformer = file("src/main/resources/META-INF/coldsweat_at.cfg")
    runs {
        client {
            workingDirectory project.file('run')
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'coldsweat'
            mods {
                coldsweat {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'coldsweat'
            mods {
                coldsweat {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'coldsweat'
            mods {
                coldsweat {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'cold_sweat', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                cold_sweat {
                    source sourceSets.main
                }
            }
        }
    }
}

mixin {
    add sourceSets.main, "cold_sweat.mixin-refmap.json"
    config 'cold_sweat.mixin.json'
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url 'https://www.cursemaven.com'
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        // location of the maven for Registrate and Flywheel
        name = 'tterrag maven'
        url = 'https://maven.tterrag.com'
    }

    maven {
        name = 'MinecraftForge'
        url = 'https://maven.minecraftforge.net/'
    }
    // Add KFF Maven repository
    maven {
        name = 'Kotlin for Forge'
        url = 'https://thedarkcolour.github.io/KotlinForForge/'
    }
    maven {
        name = "Valkyrien Skies Internal"
        url = 'https://maven.valkyrienskies.org'
    }
    maven {
        // Shedaniel's maven (Architectury API)
        url = "https://maven.architectury.dev"
        content {
            includeGroup "dev.architectury"
        }
    }
    maven {
        // saps.dev Maven (KubeJS and Rhino)
        url = "https://maven.saps.dev/minecraft"
        content {
            includeGroup "dev.latvian.mods"
        }
    }
    mavenCentral()
}

dependencies {
    implementation 'com.github.t9t.minecraft-rcon-client:minecraft-rcon-client:1.0.0'
    minecraft 'net.minecraftforge:forge:1.19.2-43.3.8'
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
    runtimeOnly fg.deobf("curse.maven:spark-361579:4057111")
    compileOnly fg.deobf("curse.maven:sereneapi-291874:4037228")
    compileOnly fg.deobf("curse.maven:werewolves-417851:4318648")
    compileOnly fg.deobf("curse.maven:vampirism-233029:4470449")
    compileOnly("com.tterrag.registrate:Registrate:MC1.19.3-1.1.10")
  //compileOnly fg.deobf("curse.maven:armorunderwear-310383:4383256") // no 1.19.2 version
  //compileOnly fg.deobf("curse.maven:carrots-311327:4382778") // no 1.19.2 version

    implementation fg.deobf("curse.maven:create-328085:4550987")
    implementation fg.deobf("curse.maven:curios-309927:4523009")
    implementation fg.deobf("curse.maven:thirst-was-taken-679270:5071552")
    compileOnly fg.deobf("curse.maven:spoiled-364918:4614777")

    implementation         ("org.valkyrienskies.core:api:${valk_skies_api_version}")
    implementation         ("org.valkyrienskies.core:impl:${valk_skies_api_version}")
    implementation         ("org.valkyrienskies.core:api-game:${valk_skies_api_version}")
    implementation         ("org.valkyrienskies.core:util:${valk_skies_api_version}")
    implementation fg.deobf("org.valkyrienskies:valkyrienskies-119-forge:2.1.2-beta.1+a04911c932")
    implementation fg.deobf("curse.maven:eureka-ships-654384:5321628")

    compileOnly fg.deobf("dev.latvian.mods:kubejs-forge:${kubejs_version}")
    implementation fg.deobf("dev.latvian.mods:rhino-forge:${rhino_version}")
    implementation fg.deobf("dev.architectury:architectury-forge:${architectury_version}")

    implementation 'thedarkcolour:kotlinforforge:3.12.0'

    runtimeOnly fg.deobf("curse.maven:byg-247560:4426501")
    runtimeOnly fg.deobf("curse.maven:serene-seasons-291874:4037228")
    runtimeOnly fg.deobf("curse.maven:biomesoplenty-220318:4473556")
    runtimeOnly fg.deobf("curse.maven:terrablender-563928:4205732")
    runtimeOnly fg.deobf("curse.maven:atmospheric-362393:4415516")
  //runtimeOnly fg.deobf("curse.maven:tough-as-nails-246391:3871450")
  //runtimeOnly fg.deobf("curse.maven:environmental-388992:4415514") // Causes weird issues IDK
    runtimeOnly fg.deobf("curse.maven:blueprint-382216:4442628")
    runtimeOnly fg.deobf("curse.maven:jei-238222:4494410")
    runtimeOnly fg.deobf("curse.maven:geckolib-388172:4407241")
    runtimeOnly fg.deobf("curse.maven:corgilib-693313:4554111")
    runtimeOnly fg.deobf("curse.maven:terralith-513688:4549496")
    runtimeOnly fg.deobf("curse.maven:wythers-490686:4127875")
    runtimeOnly fg.deobf("curse.maven:smooth-boot-633412:4162940")
    runtimeOnly fg.deobf("curse.maven:modernfix-790626:4728399")
    //runtimeOnly fg.deobf("curse.maven:legendary-tooltips-532127:4278509")
    compileOnly fg.deobf("curse.maven:iceberg-520110:4300529")
    //runtimeOnly fg.deobf("curse.maven:prism-lib-638111:3993293")

    //runtimeOnly fg.deobf("curse.maven:apotheosis-313970:5180227")
    runtimeOnly fg.deobf("curse.maven:placebo-283644:5180198")
    runtimeOnly fg.deobf("curse.maven:patchouli-306770:4031402")
    //runtimeOnly fg.deobf("curse.maven:apothic-attributes-898963:5182713")
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifactId = 'coldsweat'
            pom {
                name = 'Cold Sweat'
                description = 'A Minecraft temperature mod with a powerful framework'
                url = 'https://github.com/Momo-Softworks/Cold-Sweat'
                licenses {
                    license {
                        name = 'GNU General Public License v3.0'
                        url = 'https://www.gnu.org/licenses/gpl-3.0.en.html'
                    }
                }
                developers {
                    developer {
                        id = 'mikul'
                        name = 'Mikul'
                    }
                }
                /*scm = {
                    connection = 'scm:git:git://github.com/Momo-Softworks/Cold-Sweat.git'
                    developerConnection = 'scm:git:ssh://github.com/Momo-Softworks/Cold-Sweat.git'
                    url = 'https://github.com/Momo-Softworks/Cold-Sweat'
                }*/
            }
        }
    }

    repositories {
        maven {
            name = "OSSRH"
            url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = System.getenv("SONATYPE_USERNAME")
                password = System.getenv("SONATYPE_PASSWORD")
            }
        }
    }
}

// Example for how to get properties into the manifest for reading at runtime.
jar {
    manifest {
        attributes([
                "Specification-Title"     : "cold_sweat",
                "Specification-Vendor"    : "Mikul",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "Mikul",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "TweakerClass"            : "org.spongepowered.asm.launch.MixinTweaker",
                "TweakOrder"              : 0,
                "MixinConfigs"            : "cold_sweat.mixin.json"
        ])
    }
}

jar.finalizedBy('reobfJar')

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
