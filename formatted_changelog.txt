<div style="background-color: #212121; color: #aaafb6; font-family: 'JetBrains Mono', monospace; font-size: 9.8pt;"><pre><span style="font-size: 18px; color: #ffffff; font-weight: bold;">2.3.9</span><br /><strong style="color: #ffffff;">* item_settings/entity_settings/world_settings.toml have been renamed to item/entity/world.toml</strong><br />      - Existing files will be automatically migrated<br /><strong style="color: #ffffff;">* Added new config settings to the in-game menu:</strong><br />      - Insulation Strength<br />      - Check Sleep Conditions<br />      - New settings for the hearth/boiler/icebox<br />- Insulation attributes with unmet requirements are now shown with a red strikethrough, rather than being omitted from the tooltip<br />- Added config options for the maximum range and volume of the hearth, boiler, and icebox individually to world.toml<br /><span style="font-size: 18px; color: #ffffff; font-weight: bold;"></span><br /><u><strong style="font-size: 14px; color: #ffffff;">Fixes:</strong></u><br />- Fixed the hotbar tooltip for filled waterskins not having a negative symbol for cold temperatures<br />- Fixed thermal source blocks (hearth/boiler/icebox) not consuming fuel items immediately upon being inserted<br /><span style="font-size: 18px; color: #ffffff; font-weight: bold;"></span><br /><u><strong style="font-size: 14px; color: #ffffff;">Technical Changes:</strong></u><br /><strong style="color: #ffffff;">* Added KubeJS support</strong><br />      - Added events for adding insulators, block temps, biome temps, etc; as well as TempModifiers<br />      - Added several Cold-Sweat-related methods that can be accessed from the "coldsweat" binding<br />      - Added a few other events for specific Cold Sweat actions. This list will grow over time<br />      - See the mod's documentation page for more details<br /><strong style="color: #ffffff;">* Added "remove" config type, which allows for the removal of registered config settings that match a given data structure</strong><br />      - This includes TOML and JSON configs<br />      - Removals are handled after all of the config settings are parsed, but before they are committed to memory<br />      - Removals will not directly change the config files; only whether they are loaded<br /><strong style="color: #ffffff;">* Any JSON configs named "default" will now be loaded last</strong><br />      - This allows for configs to have a default value that can be overridden by other mods/datapacks/configs<br /><strong style="color: #ffffff;">* Massive internal registry standardization and boilerplate reduction</strong><br />      - Internal registries and configs are now much more standardized, with fewer points of failure<br />      - Codecs are used wherever possible for data serialization, rather than bespoke methods<br />      - Many of the config holders have been updated to hold custom data types, rather than unorganized tuples (like Pairs and Triplets)<br /><strong style="color: #ffffff;">* Cold Sweat configs that rely on dynamic registries now use Holders for their keys</strong><br />      - This includes biomes, dimensions, structures, etc.<br />      - For example, ConfigSettings.BIOME_TEMPS is now a DynamicHolder<Map<Holder<Biome>, BiomeTempData>><br />      - Any methods that previously accepted an "unwrapped" value now accept a Holder instead<br />      - These changes will only affect direct interactions via Java; not JSON or KubeJS<br />- ItemRequirements and EntityRequirements can now take in a Predicate<ItemStack> and Predicate<Entity> respectively<br />      - These allow for absolute control over the conditions for insulators, entity temperatures, etc.<br />      - These requirements are now calculated on the server, and the results are sent to the client<br />- Defining biome temperatures with only one temperature value is no longer supported in TOML configs<br />- All configs that accept items, blocks, biomes, etc. will now accept comma-separated lists and #tags if they previously didn't<br /></pre></div>