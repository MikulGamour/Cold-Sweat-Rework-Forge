<div style="background-color: #212121; color: #aaafb6; font-family: 'JetBrains Mono', monospace; font-size: 9.8pt;"><pre><span style="font-size: 18px; color: #ffffff; font-weight: bold;">2.3.10</span><br /><strong style="color: #ffffff;">* Ice now thaws according to Cold Sweat's temperature system</strong><br /><strong style="color: #ffffff;">* Ice now takes all temperature sources (nearby blocks, season, depth) into account when freezing/thawing</strong><br />      - The algorithm for ice is less precise than the one for entities, so there may be a minor discrepancy<br /><strong style="color: #ffffff;">* The hearth now properly functions when part of a Valkyrien Skies ship</strong><br /><strong style="color: #ffffff;">* Renamed the "Chill" effect to "Frigidness"</strong><br />- Chameleons are now immune to projectiles when they are on a player's head<br />- Reorganized the "Cold Sweat: Insulators" tab & removed most of the wool colors except for white<br />      - More specifically, if an insulator contains a tag that has more than 6 items, only the first item in the tag will be displayed<br />- World temperature now decreases slightly when the weather is overcast (even if it doesn't rain in the biome)<br />      - This effect can be configured in world.toml<br />- Players now dry off exponentially faster in higher-temperature environments<br /><span style="font-size: 18px; color: #ffffff; font-weight: bold;"></span><br /><u><strong style="font-size: 14px; color: #ffffff;">Fixes:</strong></u><br /><strong style="color: #ffffff;">* Fixed crash when the temperature of a biome is retrieved in some cases</strong><br /><strong style="color: #ffffff;">* Fixed crash due to infinite update loop when a thermal source block's fuel is changedth</strong><br /><strong style="color: #ffffff;">* Fixed crash when opening the creative menu in some cases</strong><br /><strong style="color: #ffffff;">* Fixed log spam and/or crashes caused by missing temperature modifier IDs</strong><br /><strong style="color: #ffffff;">* Fixed some config settings duplicating in the TOML files every time they are saved</strong><br /><strong style="color: #ffffff;">* Fixed server disconnection due to very large packet size in some cases</strong><br /><strong style="color: #ffffff;">* Fixed "NegativeArraySizeException: -1" error when connecting to a server with OP permissions</strong><br /><strong style="color: #ffffff;">* Fixed chestplates not being insulatable & other abnormal sewing table behaviors</strong><br /><strong style="color: #ffffff;">* Fixed blocks configured via TOML not emitting temperature</strong><br /><strong style="color: #ffffff;">* Fixed goats not regrowing their fur after being sheared</strong><br /><strong style="color: #ffffff;">* Fixed config menu not opening on dedicated server</strong><br />- Fixed the Create netherite diving set not giving the right attribute modifiers<br />- Fixed mixin conflict with mods that change ice freezing behavior (like TFC)<br />- Fixed soul-fire-based blocks not emitting temperature properly<br />- Fixed powered blocks in front of the thermolith not updating when it is destroyed<br />- Fixed errors caused when KubeJS scripts use invalid/missing IDs<br />- Fixed biome temperature having too small of a search radius<br />- Fixed no sound playing when a waterskin is dispensed from a dispenser<br /><strong style="color: #ffffff;">* Fixed the hearth not checking for fuel items</strong><br /><span style="font-size: 18px; color: #ffffff; font-weight: bold;"></span><br /><span style="font-size: 18px; color: #ffffff; font-weight: bold;"></span><br /><u><strong style="font-size: 14px; color: #ffffff;">Technical Changes:</strong></u><br /><strong style="color: #ffffff;">* The temperature decrease due to altitude is now defined in JSON as part of the default temp_region file</strong><br />      - This functionality was previously hard-coded, but can now be customized<br /><strong style="color: #ffffff;">* Added new functionality for inventory item temperatures ("carried items")</strong><br />      - Now support giving attribute modifiers and temperature modifier resistances<br />      - Now support being in Curios slots<br />- Removed the "trait" argument from the "/temperature set" sub-command, as it would be reset next tick anyway<br />- Temperature units are now supported for seasonal temperatures and block temperatures<br />      - Existing configs will be automatically updated to match the new format<br /><span style="color: #ff9900;">! The "entity" parameter for getTemperature() in BlockTemp is now nullable</span><br /><span style="color: #ff9900;">! EnableTemperatureEvent is now fired on the Forge event bus directly after configs are loaded</span><br /><strong style="color: #ffffff;">* Configs defined by JSON (and a few more) are now only synced server -> client and not the other way around</strong><br />      - These configs will no longer attempt to be written to TOML files<br />      - This change also affects singleplayer worlds, as they have an integrated server<br /><strong style="color: #ffffff;">      * Structure temperatures are not synced at all anymore, because structures themselves are not synced anyway</strong><br /><strong style="color: #ffffff;">* Config data objects are now standard classes instead of records, and all extend the same "ConfigData" class</strong><br />      - This class contains a config's UUID, type, and required mods<br /><strong style="color: #ffffff;">* Config data objects now store their source of creation (TOML, JSON, etc.)</strong><br />- Added "state()" method to KubeJS block temperature builder for easier checking of block state<br />- Added "InsulatorTabBuildEvent", which allows for simple modifications to the items in the insulator tab<br />- Added getInsulationFromNearbySources() to WorldHelper, which calculates the warmth/frigidness level at the given position from nearby hearth-like blocks<br />- Added getRoughTemperatureAt(), which provides a less accurate but much more efficient method of getting the temperature at a given location<br />      - This can be used for block updates or other tasks that are performed often and don't require exact precision<br />- Improved the logic of addModifier() methods to behave more intuitively<br />- UndergroundTempModifier ("cold_sweat:underground") has been split into two separate modifiers:<br />      - DepthBiomeTempModifier ("cold_sweat:depth_biomes"): Handles the temperature of underground biomes<br />      - ElevationTempModifier ("cold_sweat:elevation"): Handles temperature changes based on altitude & depth underground (provided by temperature regions)<br />      - These modifiers will be automatically added to existing players/entities<br /></pre></div>